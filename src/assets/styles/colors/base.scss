@use "sass:math";
@use "sass:map";
@use "../utils/mixins" as *;

$types:                 primary, error;

$base-gamma-color:      #fff;
$base-gamma-dark-color: #000;
$colors:                (
                            primary: (
                                base: #000000,
                            ),
                            error: (
                                base: #d8090b,
                            ),
                            gamma: (
                                base: $base-gamma-color,
                                dark: $base-gamma-dark-color,
                            ),
                        );


@mixin mix-color($type, $mix-value, $mode: 'light', $mix-color: white) {
    $colors: map.deep-merge(
                     (
                         $type: (
                             #{$mode}-#{$mix-value}: mix(
                                     $mix-color,
                                     map.get($colors, $type, base),
                                     math.percentage(math.div($mix-value, 10))
                             ),
                         )
                     ),
                     $colors
             ) !global;
}

@each $type in $types {
    @for $idx from 1 through 9 {
        @include mix-color($type, $idx, light, $base-gamma-color);
    }
}

@for $idx from 1 through 9 {
    @include mix-color(gamma, $idx, light, $base-gamma-dark-color);
}


$primary:               map.get($colors, primary);
$error:                 map.get($colors, error);
$gamma:                 map.get($colors, gamma);

$primary-base:          map.get($primary, base);
$error-base:            map.get($error, base);


$palette-map:           (primary: $primary, error: $error, gamma: $gamma);

:root {
    @each $palette-name, $palette in $palette-map {
        @include set-css-vars-from-map($palette-name, $palette);
    }
}
